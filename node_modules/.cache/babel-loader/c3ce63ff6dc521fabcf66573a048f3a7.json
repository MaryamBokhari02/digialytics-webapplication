{"ast":null,"code":"var _jsxFileName = \"/home/codeninja/Desktop/newProject/react-image-slider/src/components/slider/Slider.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { AiOutlineArrowLeft, AiOutlineArrowRight } from \"react-icons/ai\";\nimport { sliderData } from \"../../slider-data\";\nimport \"./Slider.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Slider = () => {\n  _s();\n\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const slideLength = sliderData.length;\n  const autoScroll = true;\n  let slideInterval;\n  let intervalTime = 5000;\n\n  const nextSlide = () => {\n    setCurrentSlide(currentSlide === slideLength - 1 ? 0 : currentSlide + 1);\n    console.log(\"next\");\n  };\n\n  const prevSlide = () => {\n    setCurrentSlide(currentSlide === 0 ? slideLength - 1 : currentSlide - 1);\n    console.log(\"prev\");\n  };\n\n  function auto() {\n    slideInterval = setInterval(nextSlide, intervalTime);\n  }\n\n  useEffect(() => {\n    setCurrentSlide(0);\n  }, []);\n  useEffect(() => {\n    if (autoScroll) {\n      auto();\n    }\n\n    return () => clearInterval(slideInterval);\n  }, [currentSlide]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        position: \"fixed\",\n        zIndex: 100,\n        color: \"white\",\n        marginTop: \"30px\",\n        marginLeft: \"30px\"\n      },\n      children: \"Digialytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        zIndex: 100,\n        bottom: \"1px\"\n      },\n      children: sliderData.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: sliderData.map((slide, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: index === currentSlide ? \"slide current\" : \"slide\",\n          children: index === currentSlide && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: slide.image,\n              alt: \"slide\",\n              className: \"image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content \",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: slide.heading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: slide.desc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"--btn --btn-primary\",\n                children: \"Get Started\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"HsV1RDvMnoYQbKxi0TQPCt2RlHg=\");\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["/home/codeninja/Desktop/newProject/react-image-slider/src/components/slider/Slider.js"],"names":["useState","useEffect","AiOutlineArrowLeft","AiOutlineArrowRight","sliderData","Slider","currentSlide","setCurrentSlide","slideLength","length","autoScroll","slideInterval","intervalTime","nextSlide","console","log","prevSlide","auto","setInterval","clearInterval","position","zIndex","color","marginTop","marginLeft","bottom","map","item","index","slide","image","heading","desc"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { AiOutlineArrowLeft, AiOutlineArrowRight } from \"react-icons/ai\";\nimport { sliderData } from \"../../slider-data\";\nimport \"./Slider.scss\";\n\nconst Slider = () => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const slideLength = sliderData.length;\n\n  const autoScroll = true;\n  let slideInterval;\n  let intervalTime = 5000;\n\n  const nextSlide = () => {\n    setCurrentSlide(currentSlide === slideLength - 1 ? 0 : currentSlide + 1);\n    console.log(\"next\");\n  };\n\n  const prevSlide = () => {\n    setCurrentSlide(currentSlide === 0 ? slideLength - 1 : currentSlide - 1);\n    console.log(\"prev\");\n  };\n\n  function auto() {\n    slideInterval = setInterval(nextSlide, intervalTime);\n  }\n\n  useEffect(() => {\n    setCurrentSlide(0);\n  }, []);\n\n  useEffect(() => {\n    if (autoScroll) {\n      auto();\n    }\n    return () => clearInterval(slideInterval);\n  }, [currentSlide]);\n\n  return (\n    <div>\n      <h2\n        style={{\n          position: \"fixed\",\n          zIndex: 100,\n          color: \"white\",\n          marginTop: \"30px\",\n          marginLeft: \"30px\",\n        }}\n      >\n        Digialytics\n      </h2>\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 100,\n          bottom: \"1px\",\n        }}\n      >\n        {sliderData.map((item, index) => (\n          <button>x</button>\n        ))}\n      </div>\n      <div className='slider'>\n        {sliderData.map((slide, index) => {\n          return (\n            <div\n              className={index === currentSlide ? \"slide current\" : \"slide\"}\n              key={index}\n            >\n              {index === currentSlide && (\n                <div>\n                  <img src={slide.image} alt='slide' className='image' />\n                  <div className='content '>\n                    <h2>{slide.heading}</h2>\n                    <p>{slide.desc}</p>\n                    <hr />\n                    <button className='--btn --btn-primary'>Get Started</button>\n                  </div>\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}